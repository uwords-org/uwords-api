version: "3.8"

services:
  app:
    build: .
    env_file:
      - ./.env
    working_dir: "/backend"
    command: >
      /bin/sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - ./:/backend
      - ./input:/backend/input
      - ./output:/backend/output
    ports:
      - "8001:8000"
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    command: redis-server --requirepass uwords_redis_password
    restart: always
    ports:
      - "6379:6379"

  worker:
    build: .
    container_name: worker
    command: celery -A uwords_api.celery_app worker --loglevel=INFO
    env_file:
      - ./.env
    environment:
      - C_FORCE_ROOT=1
    volumes:
      - ./input:/backend/input
      - ./output:/backend/output
    depends_on:
      - db
      - redis

  scheduler:
    build: .
    container_name: scheduler
    command: celery -A uwords_api.celery_app beat --loglevel=INFO
    env_file:
      - ./.env
    environment:
      - C_FORCE_ROOT=1
    volumes:
      - ./input:/backend/input
      - ./output:/backend/output
    restart: always
    depends_on:
      - db
      - redis
    
  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - ./.env
    volumes:
      - minio-storage:/data`
  
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    env_file:
      - ./.env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 uwords_minio uwords_minio_password;
      exit 0;
      "

volumes:
  minio-storage: